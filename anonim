# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded through https://t.me/hikkamods_bot
# ( o.o )  üîì Not licensed.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name: AKFarmer
# Description: Send mes
# Author: @Tirandomperson
# Commands:
# .acon | .acoff
# ---------------------------------------------------------------------------------


# meta developer: @Tirandomperson

import asyncio
from hikkatl import types
from telethon import functions

from .. import loader, utils


@loader.tds
class SendMessageModule(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–∑–Ω—ã–º –±–æ—Ç–∞–º"""

    strings = {"name": "AutoSend"}

    def __init__(self):
        self.farm_running = False
        self.farm_success_message = "<b>üèó –§–∞—Ä–º —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω<b>"
        self.farm_already_running_message = "‚ùåÔ∏è –§–∞—Ä–º —É–∂–µ –∑–∞–ø—É—â–µ–Ω"

        self.auto_send_running = False
        self.auto_send_success_message = "<b>üèó –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞<b>"
        self.auto_send_already_running_message = "‚ùåÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞"

    @loader.unrestricted
    async def ioncmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–§–∞—Ä–º–∞' –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞"""
        if self.farm_running:
            await utils.answer(message, self.farm_already_running_message)
            return
        self.farm_running = True

        await utils.answer(message, self.farm_success_message)

        while self.farm_running:
            await message.client.send_message('@iris_black_bot', '–§–∞—Ä–º–∞')
            await asyncio.sleep(4 * 60 * 60)

    @loader.unrestricted
    async def ioffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–§–∞—Ä–º–∞'"""
        if not self.farm_running:
            await utils.answer(message, "‚ùåÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.farm_running = False
        await utils.answer(message, "‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

    @loader.unrestricted
    async def aioncmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '/twist' –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞"""
        if self.auto_send_running:
            await utils.answer(message, self.auto_send_already_running_message)
            return
        self.auto_send_running = True

        await utils.answer(message, self.auto_send_success_message)

        while self.auto_send_running:
            await message.client.send_message('@AizenSoloBot', '/twist')
            await asyncio.sleep(4 * 60 * 60)

    @loader.unrestricted
    async def aioffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '/twist'"""
        if not self.auto_send_running:
            await utils.answer(message, "‚ùåÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.auto_send_running = False
        await utils.answer(message, "‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
