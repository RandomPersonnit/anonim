# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded through https://t.me/hikkamods_bot
# ( o.o )  üîì Not licensed.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name: AKFarmer
# Description: Send mes
# Author: @Tirandomperson
# Commands:
# .acon | .acoff
# ---------------------------------------------------------------------------------


# meta developer: @Tirandomperson

import asyncio
from hikkatl import types
from telethon import functions

from .. import loader, utils


@loader.tds
class SendMessageModule(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞ –≤ –±–æ—Ç–µ @Aniversecard_bot"""

    strings = {"name": "AniverseAuto"}

    def __init__(self):
        self.running = False
        self.success_message = "<b>üèó–£—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ<b>"
        self.already_running_message = "‚ùåÔ∏è–£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ"

    @loader.unrestricted
    async def akoncmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É' –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞"""
        if self.running:
            await utils.answer(message, self.already_running_message)
            return
        self.running = True

        await utils.answer(message, self.success_message)

        while self.running:
            await message.client.send_message('aniversecard_bot', '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')

            # –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞
            async for response in message.client.iter_messages('aniversecard_bot'):
                if response.message.startswith('ü•° –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä—É—Ç–æ–∫:'):
                    try:
                        num_of_spins = int(response.message.split("ü•° –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä—É—Ç–æ–∫:")[1].strip())
                    except ValueError:
                        num_of_spins = 0

                    for _ in range(num_of_spins):
                        await message.client.send_message('aniversecard_bot', '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É')
                        await asyncio.sleep(10)

                    break  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ü–∏–∫–ª—É –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞

            await asyncio.sleep(4 * 60 * 60)

    @loader.unrestricted
    async def akoffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É'"""
        if not self.running:
            await utils.answer(message, "‚ùåÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.running = False
        await utils.answer(message, "‚úîÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
