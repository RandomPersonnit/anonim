import asyncio
from hikkatl import types
from telethon import functions

from .. import loader, utils


@loader.tds
class SendMessageModule(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–∑–Ω—ã–º –±–æ—Ç–∞–º"""

    strings = {"name": "AutoSend"}

    def __init__(self):
        self.card_running = False
        self.card_success_message = "<b>üèó –£—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ<b>"
        self.card_already_running_message = "‚ùåÔ∏è –£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ"

        self.farm_running = False
        self.farm_success_message = "<b>üèó –§–∞—Ä–º —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω<b>"
        self.farm_already_running_message = "‚ùåÔ∏è –§–∞—Ä–º —É–∂–µ –∑–∞–ø—É—â–µ–Ω"

        self.auto_send_running = False
        self.auto_send_success_message = "<b>üèó –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞<b>"
        self.auto_send_already_running_message = "‚ùåÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞"

        self.mine_running = False
        self.mine_success_message = "<b>üèó –ú–∞–π–Ω–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω<b>"
        self.mine_already_running_message = "‚ùåÔ∏è –ú–∞–π–Ω–∏–Ω–≥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω"

        self.pk_running = False
        self.pk_success_message = "<b>üèó –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –±–æ—Ç–∞ @pokemon_chatbot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω<b>"
        self.pk_already_running_message = "‚ùåÔ∏è –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –±–æ—Ç–∞ @pokemon_chatbot —É–∂–µ –∑–∞–ø—É—â–µ–Ω"

        self.ichigo_chat = "@ichigochat"
        self.pokemon_chatbot = "@pokemon_chatbot"

    @loader.unrestricted
    async def aconcmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É' –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞"""
        if self.card_running:
            await utils.answer(message, self.card_already_running_message)
            return
        self.card_running = True

        await utils.answer(message, self.card_success_message)

        while self.card_running:
            await message.client.send_message('aniversecard_bot', '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É')
            await asyncio.sleep(4 * 60 * 60)

    @loader.unrestricted
    async def acoffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É'"""
        if not self.card_running:
            await utils.answer(message, "‚ùåÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.card_running = False
        await utils.answer(message, "‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

    @loader.unrestricted
    async def ioncmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–§–∞—Ä–º–∞' –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞"""
        if self.farm_running:
            await utils.answer(message, self.farm_already_running_message)
            return
        self.farm_running = True

        await utils.answer(message, self.farm_success_message)

        while self.farm_running:
            await message.client.send_message('@iris_black_bot', '–§–∞—Ä–º–∞')
            await asyncio.sleep(4 * 60 * 60)

    @loader.unrestricted
    async def ioffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–§–∞—Ä–º–∞'"""
        if not self.farm_running:
            await utils.answer(message, "‚ùåÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.farm_running = False
        await utils.answer(message, "‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

    @loader.unrestricted
    async def aioncmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '/twist' –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞"""
        if self.auto_send_running:
            await utils.answer(message, self.auto_send_already_running_message)
            return
        self.auto_send_running = True

        await utils.answer(message, self.auto_send_success_message)

        while self.auto_send_running:
            await message.client.send_message('@AizenSoloBot', '/twist')
            await asyncio.sleep(4 * 60 * 60)

    @loader.unrestricted
    async def aioffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '/twist'"""
        if not self.auto_send_running:
            await utils.answer(message, "‚ùåÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.auto_send_running = False
        await utils.answer(message, "‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

    @loader.unrestricted
    async def meoncmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–ö–æ–ø–∞—Ç—å' –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã"""
        if self.mine_running:
            await utils.answer(message, self.mine_already_running_message)
            return
        self.mine_running = True

        await utils.answer(message, self.mine_success_message)

        while self.mine_running:
            await message.client.send_message('@mine_evo_bot', '–ö–æ–ø–∞—Ç—å')
            await asyncio.sleep(2)

    @loader.unrestricted
    async def meoffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è '–ö–æ–ø–∞—Ç—å'"""
        if not self.mine_running:
            await utils.answer(message, "‚ùåÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.mine_running = False
        await utils.answer(message, "‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

    @loader.unrestricted
    async def pkoncmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –±–æ—Ç–∞ @pokemon_chatbot"""
        if self.pk_running:
            await utils.answer(message, self.pk_already_running_message)
            return
        self.pk_running = True

        await utils.answer(message, self.pk_success_message)

        async def reply_handler(event):
            if event.chat_id == self.pokemon_chatbot:
                if event.photo and event.message and event.message == ".":
                    await event.reply(".")
                elif event.message and event.message.isdigit() and "." in event.message:
                    number = event.message.replace(".", "")
                    await event.reply(number)

        message.client.add_event_handler(reply_handler, types.Message(incoming=True))

    @loader.unrestricted
    async def pkoffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –±–æ—Ç–∞ @pokemon_chatbot"""
        if not self.pk_running:
            await utils.answer(message, "‚ùåÔ∏è –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
            return
        self.pk_running = False
        await utils.answer(message, "‚úîÔ∏è –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
